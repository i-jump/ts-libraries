{"version":3,"file":"ts-lib.cjs.production.min.js","sources":["../src/array/minArray.ts","../src/fun/demoFun.ts","../src/math/demoRound.ts","../src/string/demoTrim.ts"],"sourcesContent":["/**\n * 数组最小值\n * @param {Array} arr\n * @return {Number}\n */\nexport default (arr: Array<number>): number => Math.min.apply(null, arr)\n\n","interface Interface {\n    a:number,\n    b:string\n}\nexport default function (obj:Interface): string {\n    return obj.b;\n}\n","/**\n * 数字四舍五入(可以指定保留几位小数)\n * @param {Number} value    数值\n * @param {Number} position 保留几位小数\n * @return {String}\n */\nexport default (value: number, position = 0): string => {\n    const tmp = Math.pow(10, position)\n    \n    let result = (Math.round(value * tmp) / tmp).toString()\n\n    let num = result.split('.')[1] ? result.split('.')[1].length : 0\n    \n    while (num < position) {\n        result += !result.includes('.') ? '.0' : '0'\n      \n         num++\n    }\n\n    return result\n}\n","/**\n * 去除空格\n * @param {string} str\n * @param {number} type all-所有空格(不传), around-前后空格，left-前空格，right-后空格\n */\n\nexport const demoTrim =  (str: string, type: string = 'all'): string => {\n  const types: {[index: string]: RegExp} = {\n    all: /\\s*/g,\n    around: /(^\\s*)|(\\s*$)/g,\n    left: /(^\\s*)/g,\n    right: /(\\s*$)/g\n  }\n\n  return str.replace(types[type], '')\n}\n\n"],"names":["arr","Math","min","apply","obj","b","value","position","tmp","pow","result","round","toString","num","split","length","includes","demoTrim","str","type","replace","all","around","left","right"],"mappings":"AAKA,eAAgBA,UAA+BC,KAAKC,IAAIC,MAAM,KAAMH,eCD3CI,UACdA,EAAIC,ECCf,eAAgBC,EAAeC,YAAAA,IAAAA,EAAW,WAChCC,EAAMP,KAAKQ,IAAI,GAAIF,GAErBG,GAAUT,KAAKU,MAAML,EAAQE,GAAOA,GAAKI,WAEzCC,EAAMH,EAAOI,MAAM,KAAK,GAAKJ,EAAOI,MAAM,KAAK,GAAGC,OAAS,EAExDF,EAAMN,GACTG,GAAWA,EAAOM,SAAS,KAAc,IAAP,KAEjCH,WAGEH,GCbEO,EAAY,SAACC,EAAaC,mBAAAA,IAAAA,EAAe,OAQ7CD,EAAIE,QAP8B,CACvCC,IAAK,OACLC,OAAQ,iBACRC,KAAM,UACNC,MAAO,WAGgBL,GAAO"}