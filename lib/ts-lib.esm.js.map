{"version":3,"file":"ts-lib.esm.js","sources":["../src/array/countArray.ts","../src/array/difference.ts","../src/array/intersection.ts","../src/array/maxArray.ts","../src/array/sumArray.ts","../src/array/meanArray.ts","../src/array/minArray.ts","../src/array/shuffle.ts","../src/cookies/clearCookie.ts","../src/cookies/delCookie.ts","../src/cookies/getCookie.ts","../src/cookies/setCookie.ts","../src/device/isWecat.ts","../src/fun/as.ts","../src/judge/types.ts","../src/judge/isEmpty.ts","../src/math/distance.ts","../src/math/esc.ts","../src/math/gcm.ts","../src/math/round.ts","../src/network/formData.ts","../src/network/mergeQuery.ts","../src/network/parseUrl.ts","../src/random/randomColor.ts","../src/random/rangeRandom.ts","../src/regexp/isEmail.ts","../src/string/dictionary.ts","../src/string/escMobile.ts","../src/string/escapeStr.ts","../src/string/trim.ts","../src/time/formatDay.ts","../src/time/milliseconds.ts","../src/time/runningTime.ts"],"sourcesContent":["/**\n * 统计数组中特定值出现的次数\n * @param {Array} arr 需要查询的数组\n * @param {Any} value 目标项\n * @return {number} 统计次数\n */\n\nexport default (arr: Array<any>, value: any) => {\n\n    if (({}).toString.call(arr) !== '[object Array]') throw Error('The first argument must be of type Array')\n\n    return arr.reduce((prev: number, next: any) => prev + Number(next === value), 0)\n}\n\n\nexport const points = (a:string,b:number):string => {\n    return a+b;\n};\n","/**\n * 数组取差集\n * @param {Array} arr1 目标数组1\n * @param {Array} arr2 目标数组2\n * @return {Array} 数组差集\n */\nexport default (arr1: Array<any>, arr2: Array<any>): Array<any> => {\n    if (({}).toString.call(arr1) !== '[object Array]' || ({}).toString.call(arr2) !== '[object Array]') throw Error('The first argument must be of type Array')\n\n    const s = new Set(arr2)\n\n    return arr1.filter(x => !s.has(x))\n}\n","/**\n * 数组取交集\n * @param {Array} arr1 目标数组1\n * @param {Array} arr2  目标数组2\n * @return {Array} 数组交集\n */\nexport default (arr1: Array<any>, arr2: Array<any>): Array<any> => {\n    const all = Array.from(new Set([...arr1, ...arr2]))\n\n    return all.filter(x => arr1.includes(x) && arr2.includes(x))\n}\n","/**\n * 数组最大值\n * @param {Array} arr\n * @return {Number}\n */\nexport default (arr: Array<number>): number => Math.max.apply(null, arr)\n\n","/**\n * 数组求和\n * @param {Array} arr\n * @return {Number}\n */\nexport default (arr: Array<number>): number => arr.reduce((pre, cur) => pre + cur)\n\n","import sum from './sumArray'\n\n/**\n * 数组求平均值\n * @param {Array} arr\n * @return {Number}\n */\nexport default (arr: Array<number>): number => sum(arr) / arr.length\n\n","/**\n * 数组最小值\n * @param {Array} arr\n * @return {Number}\n */\nexport default (arr: Array<number>): number => Math.min.apply(null, arr)\n\n","/**\n * 洗牌算法\n * \n * @param {any} arr 需要洗牌的数组\n * @returns 洗后数组\n */\nexport default (arr: Array<any>): Array<any> => {\n    for (let i = 0; i < arr.length; i++) {\n        const randomIndex = i + Math.floor(Math.random() * (arr.length - i));\n        [arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]]\n    }\n\n    return arr\n}\n\n","/**\n * 清空客户端cookie模块\n *\n * @param {string[]} paths 需要清除cookie 作用于集合\n * @param {string[]} domains 需要清除cookie 域集合\n */\n\nfunction clearCookie(path: string, domain: string): void\nfunction clearCookie(path: Array<string>, domain: Array<string>): void\nfunction clearCookie(path: any, domain: any): void {\n  let exp = new Date()\n  let keys = document.cookie.match(/[^ =;]+(?=\\=)/g)\n  let paths: Array<string> = []\n  let domains: Array<string> = []\n\n  if (Array.isArray(path))\n    paths = path\n  else\n    paths.push(path || '/')\n\n  if (Array.isArray(domain))\n    domains = path\n  else\n    domains.push(domain || '')\n\n  if (!keys) return\n  \n  exp.setDate(exp.getDate() - 1)\n\n  keys.forEach((key: string): any => domains.forEach((domain: string): any => paths.forEach((path: string): any => document.cookie = `${key}=0;path=${path};Domain=${domain};expires=${exp.toUTCString()}`)))\n}\n\nexport default clearCookie\n","/**\n * 删除cookie模块\n */\n\ninterface CookieInfo {\n  key: string // 要删除的cookie键名 (必选)\n  path?: string // 要删除的cookie值 (可选)\n  domain?: string // 要删除的cookie值 (可选)\n}\n\n/**\n * @param {String} key // cookie键\n * @param {String} path // cookie 作用域\n * @param {String} domain // cookie 域\n */\nfunction cleanFactory(\n  key: string,\n  path: string = '/',\n  domain: string = ''\n): void {\n  let now = new Date()\n  now.setDate(now.getDate() - 1)\n\n  document.cookie = `${key}=0;path=${path};Domain=${domain};expires=${now.toUTCString()}`\n}\n\n/**\n * 从客户端删除一个或者多个cookie\n * @param {string | string[] | CookieInfo[]} keys 需要删除的一个key值或者多个key值(cookie描述对象)\n */\nfunction delCookie(keys: string, path: string, domain: string): void\nfunction delCookie(keys: CookieInfo): void\nfunction delCookie(keys: Array<string>): void\nfunction delCookie(keys: Array<CookieInfo>): void\nfunction delCookie(keys: any, path?: string, domain?: string): void {\n  if (typeof keys === 'string') return cleanFactory(keys, path, domain)\n\n  if (({}).toString.call(keys) === '[object Object]') keys = [keys]\n\n  const isArr: boolean = Array.isArray(keys)\n\n  if (isArr && typeof keys[0] === 'string') return keys.forEach((key: string): any => cleanFactory(key))\n\n  if (isArr && typeof keys[0] === 'object') {\n    keys.forEach(\n      (target: CookieInfo): void => {\n        const {key, path, domain}: CookieInfo = target\n        \n        cleanFactory(key, path, domain)\n      }\n    )\n  }\n}\n\nexport default delCookie\n","/**\n * 获取cookie模块\n * @param {string} key // 需要获取的键\n */\n\nfunction grabCookies(key: string): string | null {\n  let arr: any\n  let reg = new RegExp(`(^| )${key}=([^;]*)(;|$)`)\n\n  if ((arr = document.cookie.match(reg))) return arr[2]\n\n  return null\n}\n\n/**\n * 根据传入 key 获取本地一个多个cookie\n *\n * @param {string | string[]} keys 需要获取cookie的 keys\n * @returns {string | object} 返回获取后的结果 (多个值返回值为对象类型)\n */\nfunction getCookie(keys: Array<string>): any\nfunction getCookie(keys: string): string\nfunction getCookie(keys: any): any {\n  if (Array.isArray(keys)) {\n    let results: any = {}\n\n    keys.forEach((key: string): any => results[key] = grabCookies(key))\n\n    return results\n  }\n\n  return grabCookies(keys.toString())\n}\n\nexport default getCookie\n","/**\n * 设置cookie模块\n */\n\ninterface CookieInfo {\n  key: string // 要设置的cookie键名 (必选)\n  value: string // 要设置的cookie值 (必选)\n  path?: string // 要设置的cookie值 (可选)\n  domain?: string // 要设置的cookie值 (可选)\n  expires?: number // 要设置的cookie值 (可选)\n}\n\n/**\n * 设置单个值\n *\n * @param {CookieInfo} cookie cookie描述对象\n */\nfunction operation(cookie: CookieInfo) {\n  let {key, value, path = '/', domain = '', expires = 7} = cookie\n  let now = new Date()\n\n  now.setDate(now.getDate() + expires)\n\n  document.cookie = `${key}=${escape(\n    value\n  )};path=${path};Domain=${domain};expires=${now.toUTCString()}`\n}\n\n/**\n * 设置一个或者多个cookie到客户端\n *\n * @param {string | CookieInfo | CookieInfo[]} cookie cookie key 或 描述对象(可接受多个描述对象)\n * @param {string} value 需设置cookie值(当cookie为 string时 value为必选字段)\n */\nfunction setCookie(cookie: string, value: string, path: string, domain: string): void\nfunction setCookie(cookie: CookieInfo): void\nfunction setCookie(cookie: Array<CookieInfo>): void\nfunction setCookie(cookie: any, value?: string, path?: string, domain?: string) {\n  let args: Array<CookieInfo> = []\n\n  if (typeof cookie === 'string') {\n    value = value || ''\n    let cookieInfo: CookieInfo = {key: cookie, value, path, domain}\n\n    cookie = cookieInfo\n  }\n\n  if (({}).toString.call(cookie) === '[object Object]') args = [cookie]\n\n  if (Array.isArray(cookie)) args = cookie\n\n  args.forEach(\n    (arg: CookieInfo): void => {\n      operation(arg)\n    }\n  )\n}\n\nexport default setCookie\n","/**\n * 检测是否在微信浏览器中\n *\n * @return {Boolean} 检测结果\n */\nexport default (): boolean => {\n  const ua: string = navigator.userAgent.toLowerCase()\n\n  return ua.indexOf('micromessenger') != -1\n}\n\n","interface Interface {\n    a:number,\n    b:string\n}\nexport default function (obj:Interface): string {\n    return obj.b;\n}\n","/***\n * \n *  .--,       .--,\n * ( (  \\.---./  ) )\n *  '.__/o   o\\__.'\n *     {=  ^  =}\n *      >  -  <\n *     /       \\\n *    //       \\\\\n *   //|   .   |\\\\\n *   \"'\\       /'\"_.-~^`'-.\n *      \\  _  /--'         `\n *    ___)( )(___\n *   (((__) (__)))    \n * \n * 高山仰止,景行行止.虽不能至,心向往之。\n */\n/**\n * 类型判断模块\n */\n\nconst basicTypes: string[] = [\n  'Undefined',\n  'Null',\n  'String',\n  'Number',\n  'Boolean',\n  'Function',\n  'Symbol',\n  'Object',\n  'Array',\n  'Date',\n  'RegExp',\n  'Arguments',\n  'Error',\n  'Map',\n  'WeakMap',\n  'Set',\n  'WeakSet',\n  'XMLHttpRequest',\n  'FormData',\n  'URLSearchParams'\n]\n\nlet typeObj: Map<string, string> = new Map()\n\n/**\n * 类型检测方法工厂\n * \n * @param {String} basicType 类型\n * @return {Function} 检测函数\n */\nconst concentrated = (basicType: string): Function => (type: any): Boolean => typeOf(type) === basicType.toLowerCase()\n\n/**\n * 检测传入任意数据的数据类型\n *\n * @param {Any} type 待检测数据\n * @return {String} 返回检测结果\n */\nconst typeOf = (type: any): string => {\n  const typeName: string = Object.prototype.toString.call(type)\n\n  return typeObj.get(typeName) || 'unknown'\n}\n\nlet caller: {[index: string]: any} = {typeOf, isNaN}\n\nbasicTypes.forEach(\n  (item: string): void => {\n    typeObj.set(`[object ${item}]`, item.toLowerCase())\n\n    // 批量生成类型判断方法\n    caller[`is${item}`] = concentrated(item)\n  }\n)\n\nexport default caller\n\n","/**\n * 空数据检测模块\n */\nimport types from './types'\n\nconst emptyMethod = (): boolean => false\n\nconst typeList: Array<string> = ['string', 'object', 'array', 'map', 'set']\nconst methods: Array<Function> = [\n  (target: string): boolean => !target.trim(),\n  (target: {[index: string] : any}): boolean => JSON.stringify(target) === '{}',\n  (target: Array<any>): boolean => !target.length,\n  (target: Map<any, any>): boolean => target.size < 1,\n  (target: Set<any>): boolean => target.size < 1,\n]\nconst factory: Map<string, Function> = new Map()\n\ntypeList.forEach(\n  (type: string, index: number): void => {\n    factory.set(type, methods[index])\n  }\n)\n\n/**\n * 检测传入任意类型数据是否为空（注：string、array、object、map、set（null、undefined将被视为空）除现有类型其他均被视为不为空）\n *\n * @param {Any} target 目标数据\n * @return {Boolean} 返回检测结果\n */\nexport default  (target: any): boolean => {\n  let key: string = types.typeOf(target)\n\n  if (key === 'null' || key === 'undefined') return true\n\n  let method: Function = factory.get(key) || emptyMethod\n\n  return method(target)\n}\n\n","/**\n * 计算两点 (x0, y0), (x1, y1) 之间的欧几里得距离\n * @param {Number} x0\n * @param {Number} y0\n * @param {Number} x1\n * @param {Number} y1\n * @return {Number}\n */\nexport default (x0: number, y0: number, x1: number, y1: number): number => Math.hypot(x1 - x0, y1 - y0)\n","/**\n * 整数间汉明距离\n *\n * @param {number} num1 起始数字\n * @param {number} num2 结束数字\n * @return {number} 汉明距离\n */\n\nexport default (num1: number, num2: number): number => {\n    if (typeof num1! == 'number' || typeof num2! == 'number') return 0\n\n    return ((num1 ^ num2).toString(2).match(/1/g) || '').length\n}\n","/**\n * 求最大公约数\n * @param {Number} x\n * @param {Number} y\n * @return {Number}\n */\nconst gcm = (x: number, y: number): number => !y ? x : gcm(y, x % y)\n\nexport default gcm\n","/**\n * 数字四舍五入(可以指定保留几位小数)\n * @param {Number} value    数值\n * @param {Number} position 保留几位小数\n * @return {String}\n */\nexport default (value: number, position = 0): string => {\n    const tmp = Math.pow(10, position)\n    \n    let result = (Math.round(value * tmp) / tmp).toString()\n\n    let num = result.split('.')[1] ? result.split('.')[1].length : 0\n    \n    while (num < position) {\n        result += !result.includes('.') ? '.0' : '0'\n      \n         num++\n    }\n\n    return result\n}\n","/**\n * 参数转formData形式\n *\n * @param {Object} params 需要处理的参数\n * \n * @return {FormData}\n */\n\nexport default (params: {[index: string]: string}): FormData => {\n    if (typeof params !== 'object') return params\n\n    let formData: FormData = new FormData()\n\n    for (let key in params) formData.append(key, params[key])\n\n    return formData\n}\n","import isEmpty from '../judge/isEmpty'\n\n/**\n * 拼接url与参数\n *\n * @param {String} url 目标url，可默认带参数\n * @param {Object} params 需要拼接的参数\n * @return {String}\n */\nexport default (url: string, params: any): string => {\n  if (isEmpty(params)) return url\n\n  const isParam = url.indexOf('?', 0) !== -1\n\n  if (typeof params !== 'object') return `${url}${isParam ? '&' : '?'}${params}`\n\n  const query: any = Object.keys(params)\n    .map((key: string): string => `${key}=${params[key]}`)\n    .join('&')\n\n  return query ? `${url}${isParam ? '&' : '?'}${query}` : url\n}\n","/**\n * 根据传入规则自动补全接口项目名\n *\n * @param {Array} rules 需要排除的项目名集合\n * @param {String} target 需要补全的项目名\n * @return 二阶函数\n */\n\nexport default (rules: Array<string>, target: string): Function => (\n  url: string\n): string => {\n  if (!Array.isArray(rules) || typeof url !== 'string') return url\n\n  if (!rules.includes(target)) rules.push(target)\n\n  let reg = new RegExp(`/${rules.join('|')}`)\n\n  return /^http|https/.test(url) ? url : reg.test(url) ? url : `${target}${url}`\n}\n","/**\n * 随机生成颜色\n */\nexport default (): string => '#' + ('000' + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n\n","import types from '../judge/types'\n\n/**\n * 生成指定范围随机整数\n * @param {Number} max 最大值\n * @param {Number} min 最小值\n * @param {String} border 边界 'both'、'left'、'right'、'no'\n */\nexport default (min: number, max: number, border: string = 'both') => {\n  if (min === max) return 0\n\n  const range: number = max - min\n\n  let random = Math.random() || 1\n\n  const processing: {[index: string]: Function} = {\n    left: () => min + Math.floor(random * range),\n    right: () => min + Math.ceil(random * range),\n    no: () => {\n      if (max - min < 1 || max - min === 1) throw Error('The boundary value is unreasonable')\n      return min + Math.ceil(random * (range - 1))\n    },\n    both: () => min + Math.round(random * range)\n  }\n\n  let f: Function = processing[border]\n\n  if (!types.isFunction(f)) f = processing['both']\n\n  return f()\n}\n","export default (email: string): boolean => {\n    if (typeof email !== 'string') throw Error('Email expects strings !')\n\n    const reg: RegExp = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/\n\n    return reg.test(email)\n}\n","/**\n * 字典顺序整理\n */\n\nconst strChineseFirstPY: stringn\n\nconst reg: RegExp = /^[\\u4E00-\\u9FA5A-Za-z]/\n\n/**\n * 获取传入字符串首字母\n * \n * @param {string} target \n * @returns 找到的首字母\n */\nfunction makePy(target: string) {\n\n    if (typeof target !== 'string') throw new Error(\"The expected thing is of type string\")\n\n    const ch = target.charAt(0)\n\n    return checkCh(ch)\n}\n\n/**\n * 根据字符串首字母Unicode码查询首字母\n * \n * @param {string} ch \n * @returns 找到的首字母\n */\nfunction checkCh(ch: string){\n    if (!reg.test(ch)) return '#'\n\n    const uni = ch.charCodeAt(0)\n\n    if (uni > 40869 || uni < 19968) return ch\n\n    return strChineseFirstPY.charAt(uni - 19968)\n}\n\nexport default makePy\n","/**\n * 加密手机号\n * \n * @param {string | number} 目标手机号 \n * @returns 加密后的手机号\n */\n\nexport default (tel: number | string) => {\n    const types: Array<string> = ['number', 'string']\n\n    if (!types.includes(typeof(tel))) throw Error('tel expects Numbers or strings')\n\n    if (typeof tel === 'number') tel = tel.toString()\n\n    return tel.substr(0, 3) + \"****\" + tel.substr(7, 4)\n}\n\n","/**\n * 转义特殊字符\n * @param {string} str 需要转义的字符串\n */\nexport default (str: string) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n","/**\n * 去除空格\n * @param {string} str\n * @param {number} type all-所有空格(不传), around-前后空格，left-前空格，right-后空格\n */\n\nexport default (str: string, type: string = 'all'): string => {\n  const types: {[index: string]: RegExp} = {\n    all: /\\s*/g,\n    around: /(^\\s*)|(\\s*$)/g,\n    left: /(^\\s*)/g,\n    right: /(\\s*$)/g\n  }\n\n  return str.replace(types[type], '')\n}\n\n","/**\n * ms 转换成天 时 分 秒\n * @param {time: number} time 目标时间ms number类型\n *\n * @return {object} return 转化后的对象\n */\n\nexport default (time: number): {[index: string]: string} => { //传入的是ms 秒杀新增天和0.1秒\n    const t: number = Math.floor(time / 1000)\n    const d: number = Math.floor(t / 60 / 60 / 24)\n    const h: number = Math.floor(t / 60 / 60 % 24)\n    const m: number = Math.floor(t / 60 % 60)\n    const s: number = Math.floor(t % 60)\n    const ms: number = Math.floor(time / 100 % 10)\n    \n    return {\n        day: `${d > 9 ? d : '0' + d}`,\n        hour: `${h > 9 ? h : '0' + h}`,\n        minute: `${m > 9 ? m : '0' + m}`,\n        second: `${s > 9 ? s : '0' + s}`,\n        ms: ms.toString()\n    }\n}","/**\n * 将目标参数date转换成时间戳  暂时只支持  1970-01-01 01:01:01 | 1970年01月01日 01时01分01秒 | new Date()\n * @param {date: Date} date 目标时间格式\n * \n * @param {format = '-'} format '-' 可传入参数  默认 '-' \n *\n * @return {number} return 转化后的时间戳\n */\nexport default (date: any, format: string = '-'): number => {\n\n    if (typeof date === 'string' && format === '-') {\n\n        const replacement: string = date.replace(new RegExp(format, 'gm'), '/');\n\n        return new Date(replacement).getTime();\n    }\n    if (typeof date === 'string' && format !== '-') {\n        const replacement1: string = date.replace(new RegExp(/[年|月]/, \"gm\"), \"-\").replace(new RegExp(/[时|分]/, \"gm\"), \":\").replace(new RegExp(/[日|秒]/, \"gm\"), \"\")\n\n        const milliseconds: number =  new Date(replacement1).getTime()\n        return isNaN(milliseconds) ? 0 : milliseconds;\n    }\n\n    if (Object.prototype.toString.call(date) === '[object Date]') {\n\n        return date.getTime();\n    }\n\n    return 0;\n}","/**\n * 测试功能所花费的时间\n * @param {Function} callback 需要检测的目标函数\n * @param {Any} 函数执行返回结果\n */\n\nexport default (callback: Function): any => {\n  if (typeof callback !== 'function') return callback\n\n  console.time('startTime')\n\n  const run = callback()\n\n  console.timeEnd('endTime')\n\n  return run\n}\n"],"names":["arr","value","toString","call","Error","reduce","prev","next","Number","points","a","b","arr1","arr2","s","Set","filter","x","has","all","Array","from","includes","Math","max","apply","pre","cur","sum","length","min","i","randomIndex","floor","random","clearCookie","path","domain","exp","Date","keys","document","cookie","match","paths","domains","isArray","push","setDate","getDate","forEach","key","toUTCString","cleanFactory","now","delCookie","isArr","target","grabCookies","reg","RegExp","getCookie","results","operation","expires","escape","setCookie","args","cookieInfo","arg","ua","navigator","userAgent","toLowerCase","indexOf","obj","basicTypes","typeObj","Map","concentrated","basicType","type","typeOf","typeName","Object","prototype","get","caller","isNaN","item","set","emptyMethod","typeList","methods","trim","JSON","stringify","size","factory","index","types","method","x0","y0","x1","y1","hypot","num1","num2","gcm","y","position","tmp","pow","result","round","num","split","params","formData","FormData","append","url","isEmpty","isParam","query","map","join","rules","test","slice","border","range","processing","left","right","ceil","no","both","f","isFunction","email","strChineseFirstPY","makePy","ch","charAt","checkCh","uni","charCodeAt","tel","substr","str","replace","around","time","t","d","h","m","ms","day","hour","minute","second","date","format","replacement","getTime","replacement1","milliseconds","callback","console","run","timeEnd"],"mappings":"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"}